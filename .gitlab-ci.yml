stages:
  - Prepare
  - Build
  - Test
  - Benchmark
  - Deploy

image: docker:20.10.18-git
services:
  - docker:20.10.18-dind

# **************************************************************************** #
#                                 Templates                                    #
# **************************************************************************** #

# Year rules
.run-current-year-template:
  variables:
    AOC_CURRENT_YEAR: 2022
  rules:
    - if: '$AOC_CURRENT_YEAR == $AOC_YEAR'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

# General setup
.setup-template:
  tags:
    - linux
    - docker
    - dind
  variables:
    DOCKER_VOL: ${CI_PROJECT_DIR}/${AOC_YEAR}
    DOCKER_CURRENT_IMAGE: ${CI_REGISTRY_IMAGE}:aoc-${AOC_YEAR}-${CI_COMMIT_SHA}
    DOCKER_LATEST_IMAGE: ${CI_REGISTRY_IMAGE}:aoc-${AOC_YEAR}-latest
  before_script:
    - env
    - pwd
    - ls
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker pull ${DOCKER_CURRENT_IMAGE} || true
    - docker pull ${DOCKER_LATEST_IMAGE} || true
    - docker images
  timeout: 20m

# Prepare docker
.prepare-docker-template:
  stage: Prepare
  script:
    - >-
      docker build --cache-from ${DOCKER_LATEST_IMAGE}
      --tag ${DOCKER_CURRENT_IMAGE} --tag ${DOCKER_LATEST_IMAGE} ${AOC_YEAR}
    - docker push ${DOCKER_CURRENT_IMAGE}
    - docker push ${DOCKER_LATEST_IMAGE}

# **************************************************************************** #
#                            Advent of Code 2021                               #
# **************************************************************************** #

# 2021 template
.2021-template:
  variables:
    AOC_YEAR: 2021
  extends:
    - .setup-template

# Prepare docker for 2021
docker ~ aoc-2021:
  extends:
    - .2021-template
    - .prepare-docker-template

# 2021 Rust build (debug + release)
build ~ aoc-2021:
  stage: Build
  extends:
    - .2021-template
    - .run-current-year-template
  needs:
    - docker ~ aoc-2021
  script:
    - >-
      docker run --rm -v ${DOCKER_VOL}:/${AOC_YEAR} ${DOCKER_CURRENT_IMAGE}
      sh -c 'cargo build --workspace -j2'
    - >-
      docker run --rm -v ${DOCKER_VOL}:/${AOC_YEAR} ${DOCKER_CURRENT_IMAGE}
      sh -c 'cargo build --release --workspace --verbose -j2'

# 2021 Rust test (debug)
test ~ aoc-2021:
  stage: Test
  extends:
    - .2021-template
    - .run-current-year-template
  needs:
    - build ~ aoc-2021
  script:
    - >-
      docker run --rm -v ${DOCKER_VOL}:/${AOC_YEAR} ${DOCKER_CURRENT_IMAGE}
      sh -c 'cargo test --workspace --no-fail-fast --verbose -j2 --
      -Z unstable-options --report-time'
  after_script:
    - >-
      docker run --rm -v ${DOCKER_VOL}:/${AOC_YEAR} ${DOCKER_CURRENT_IMAGE}
      sh -c 'cargo test --workspace --no-fail-fast --verbose -j2 --
      -Z unstable-options --format json --report-time
      | cargo2junit > JUnitReports.xml'
  artifacts:
    reports:
      junit: 2021/JUnitReports.xml
    when: always
    expire_in: 1 week

# 2021 Rust fmt check
format ~ aoc-2021:
  stage: Test
  extends:
    - .2021-template
  needs:
    - job: build ~ aoc-2021
      optional: true
  script:
    - >-
      docker run --rm -v ${DOCKER_VOL}:/${AOC_YEAR} ${DOCKER_CURRENT_IMAGE}
      sh -c 'cargo fmt --verbose -- --check'
  allow_failure: true

# 2021 Rust benchmark (release)
bench ~ aoc-2021:
  stage: Benchmark
  extends:
    - .2021-template
    - .run-current-year-template
  needs:
    - test ~ aoc-2021
  script:
    - >-
      docker run --rm -v ${DOCKER_VOL}:/${AOC_YEAR} ${DOCKER_CURRENT_IMAGE}
      sh -c 'cargo bench --workspace --no-fail-fast --verbose -j2 --
      --warm-up-time 1 --measurement-time 2 --sample-size 10'
    - mkdir -p benchmarks_${AOC_YEAR}
    - mv ${AOC_YEAR}/target/criterion/* benchmarks_${AOC_YEAR}
  artifacts:
    paths:
      - benchmarks_${AOC_YEAR}

# **************************************************************************** #
#                            Advent of Code 2022                               #
# **************************************************************************** #

# 2022 template
.2022-template:
  variables:
    AOC_YEAR: 2022
  extends:
    - .setup-template

# Prepare docker for 2022
docker ~ aoc-2022:
  extends:
    - .2022-template
    - .prepare-docker-template

# 2022 TypeScript build
build ~ aoc-2022:
  stage: Build
  extends:
    - .2022-template
    - .run-current-year-template
  needs:
    - docker ~ aoc-2022
  script:
    - >-
      docker run --rm -v ${DOCKER_VOL}:/${AOC_YEAR} ${DOCKER_CURRENT_IMAGE}
      sh -c 'npm ci && npm run tsc --workspaces'

# 2022 TypeScript test
test ~ aoc-2022:
  stage: Test
  extends:
    - .2022-template
    - .run-current-year-template
  needs:
    - build ~ aoc-2022
  script:
    - >-
      docker run --rm -v ${DOCKER_VOL}:/${AOC_YEAR} ${DOCKER_CURRENT_IMAGE}
      sh -c 'npm ci && npm test --workspaces -- --maxWorkers 1 --ci
      --reporters=default --reporters=jest-junit'
  artifacts:
    reports:
      junit: 2022/**/junit.xml
    when: always
    expire_in: 1 week

# 2022 TypeScript fmt check
format ~ aoc-2022:
  stage: Test
  extends:
    - .2022-template
  needs:
    - job: build ~ aoc-2022
      optional: true
  script:
    - >-
      docker run --rm -v ${DOCKER_VOL}:/${AOC_YEAR} ${DOCKER_CURRENT_IMAGE}
      sh -c 'npm ci && npm run check-format --workspaces'
  allow_failure: true

# 2022 TypeScript benchmark (release)
bench ~ aoc-2022:
  stage: Benchmark
  extends:
    - .2022-template
    - .run-current-year-template
  needs:
    - test ~ aoc-2022
  script:
    - >-
      docker run --rm -v ${DOCKER_VOL}:/${AOC_YEAR} ${DOCKER_CURRENT_IMAGE}
      sh -c 'npm ci && npm run tsc --workspaces && npm run benchmark --workspaces'

# **************************************************************************** #
#                               Pages deployment                               #
# **************************************************************************** #

# Create pages with benchmark results
pages:
  stage: Deploy
  needs:
    - job: bench ~ aoc-2021
      optional: true
    - job: bench ~ aoc-2022
      optional: true
  script:
    - mkdir -p public
    - if [ -d "benchmarks_2021"]; then
    -   mv benchmarks_2021 public/2021
    - fi
    - if [ -d "benchmarks_2022"]; then
    -   mv benchmarks_2022 public/2022
    - fi
  artifacts:
    paths:
      - public
