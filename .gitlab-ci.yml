stages:
  - Prepare
  - Build
  - Test
  - Benchmark

image: docker:20.10.23
services:
  - docker:20.10.23-dind

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

# Year rules
.run-current-year-template:
  variables:
    AOC_CURRENT_YEAR: 2022
  rules:
    - if: '$AOC_CURRENT_YEAR == $AOC_YEAR'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

# **************************************************************************** #
#                            Advent of Code 2021                               #
# **************************************************************************** #

# Prepare docker for 2021
prepare-docker ~ aoc-2021:
  stage: Prepare
  tags:
    - linux
    - docker
    - dind
  script:
    - docker build -t aoc-2021-rust 2021
    - docker pull $CI_REGISTRY_IMAGE:aoc-2021-rust-latest || true
    - >-
      docker build --cache-from $CI_REGISTRY_IMAGE:aoc-2021-rust-latest
      --tag $CI_REGISTRY_IMAGE:aoc-2021-rust-$CI_COMMIT_SHA
      --tag $CI_REGISTRY_IMAGE:aoc-2021-rust-latest 2021
    - docker push $CI_REGISTRY_IMAGE:aoc-2021-rust-$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:aoc-2021-rust-latest

# 2021 Rust template
# .2021-template:
#   tags:
#     - AoC
#     - Rust
#   timeout: 20m
#   extends:
#     - .bsd-machine-template
#   variables:
#     AOC_YEAR: 2021
#     BUILD_DIR: ${PIPELINE_BASE_DIR}/pipe-$CI_PIPELINE_ID/${AOC_YEAR}
#   before_script:
#     - export PATH="$PATH:/root/.cargo/bin:$HOME/.cargo/bin"
#     - export CARGO_TARGET_DIR=${BUILD_DIR}
#     - env
#     - pwd
#     - ls
#     - pushd ${AOC_YEAR}
#     - rustc --version && cargo --version  # Print version info for debugging

# # 2021 Rust build (debug + release)
# build ~ aoc-2021:
#   stage: Builds
#   extends:
#     - .2021-template
#     - .run-current-year-template
#   script:
#     - cargo build --workspace --verbose -j1
#     - cargo build --release --workspace --verbose -j1

# # 2021 Rust test (debug)
# test ~ aoc-2021:
#   stage: Tests
#   extends:
#     - .2021-template
#     - .run-current-year-template
#   needs:
#     - build ~ aoc-2021
#   script:
#     - >-
#       cargo test --workspace --no-fail-fast --verbose -j1 --
#       -Z unstable-options --report-time
#   after_script:
#     - export PATH="$PATH:/root/.cargo/bin:$HOME/.cargo/bin"
#     - export CARGO_TARGET_DIR=${BUILD_DIR}
#     - pushd ${AOC_YEAR}
#     - >-
#       cargo test --workspace --no-fail-fast --verbose -j1 --
#       -Z unstable-options --format json --report-time
#       | cargo2junit > JUnitReports.xml
#   artifacts:
#     reports:
#       junit: 2021/JUnitReports.xml
#     when: always
#     expire_in: 1 week

# # 2021 Rust fmt check
# format ~ aoc-2021:
#   stage: Tests
#   extends:
#     - .2021-template
#   script:
#     - cargo fmt --verbose -- --check
#   allow_failure: true

# # 2021 Rust benchmark (release)
# bench ~ aoc-2021:
#   stage: Benchmarks
#   extends:
#     - .2021-template
#     - .run-current-year-template
#   needs:
#     - test ~ aoc-2021
#   script:
#     - git clean -dfx .
#     - git clone git@github.com:ACSimon33/Advent_of_Code.git -b gh-pages
#     - mkdir $BUILD_DIR/criterion
#     - mv Advent_of_Code/2021/* $BUILD_DIR/criterion/
#     - >-
#       cargo bench --workspace --no-fail-fast --verbose -j1 --
#       --warm-up-time 1 --measurement-time 2 --sample-size 10
#     - pushd Advent_of_Code/2021
#     - mv $BUILD_DIR/criterion/* .
#     - git add .
#     - git commit -m "Updated 2021 benchmark results for commit '$CI_COMMIT_MESSAGE'"
#     - git push

# # **************************************************************************** #
# #                            Advent of Code 2022                               #
# # **************************************************************************** #

# # 2022 TypeScript template
# .2022-template:
#   tags:
#     - AoC
#     - TypeScript
#   timeout: 20m
#   extends:
#     - .bsd-machine-template
#   variables:
#     AOC_YEAR: 2022
#     BUILD_DIR: ${PIPELINE_BASE_DIR}/pipe-$CI_PIPELINE_ID/${AOC_YEAR}
#   before_script:
#     - env
#     - pwd
#     - ls
#     - pushd ${AOC_YEAR}
#     - node --version && npm --version  # Print version info for debugging

# # 2022 TypeScript build
# build ~ aoc-2022:
#   stage: Builds
#   extends:
#     - .2022-template
#     - .run-current-year-template
#   script:
#     - npm ci
#     - npm run tsc --workspaces

# # 2022 TypeScript test
# test ~ aoc-2022:
#   stage: Tests
#   extends:
#     - .2022-template
#     - .run-current-year-template
#   needs:
#     - build ~ aoc-2022
#   script:
#     - npm ci
#     - >-
#       npm test --workspaces -- --maxWorkers 1 --ci
#       --reporters=default --reporters=jest-junit
#   artifacts:
#     reports:
#       junit: 2022/**/junit.xml
#     when: always
#     expire_in: 1 week

# # 2022 TypeScript fmt check
# format ~ aoc-2022:
#   stage: Tests
#   extends:
#     - .2022-template
#   script:
#     - npm ci
#     - npm run check-format --workspaces
#   allow_failure: true

# # 2022 TypeScript benchmark (release)
# bench ~ aoc-2022:
#   stage: Benchmarks
#   extends:
#     - .2022-template
#     - .run-current-year-template
#   needs:
#     - test ~ aoc-2022
#   script:
#     - npm ci
#     - npm run tsc --workspaces
#     - npm run benchmark --workspaces

# # Clean stage
# clean:
#   stage: Cleanup
#   tags:
#     - AoC
#   timeout: 10m
#   extends:
#     - .bsd-machine-template
#   dependencies: []
#   needs:
#     - job: format ~ aoc-2021
#     - job: bench ~ aoc-2021
#       optional: true
#     - job: format ~ aoc-2022
#     - job: bench ~ aoc-2022
#       optional: true
#   when: always
#   script:
#     - echo $PIPELINE_DIR
#   after_script:
#     - rm -rf $PIPELINE_DIR
