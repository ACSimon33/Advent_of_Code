stages:
  - prepare
  - build
  - test
  - benchmark
  - deploy

# **************************************************************************** #
#                                 Templates                                    #
# **************************************************************************** #

# Year rules
.run-current-year-template:
  tags:
    - linux
    - docker
  variables:
    GIT_STRATEGY: clone
    GIT_DEPTH: 1
    AOC_CURRENT_YEAR: 2024
    DOCKER_CURRENT_IMAGE: ${CI_REGISTRY_IMAGE}:aoc-${AOC_YEAR}-${CI_COMMIT_SHA}
    DOCKER_LATEST_IMAGE: ${CI_REGISTRY_IMAGE}:aoc-${AOC_YEAR}-latest
  image: ${DOCKER_CURRENT_IMAGE}
  rules:
    - if: '$AOC_CURRENT_YEAR == $AOC_YEAR'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  timeout: 1h
  before_script:
    - env
    - cd ${AOC_YEAR}
    - pwd
    - ls
    - git-crypt unlock /git-crypt-key.key

# Prepare docker
.prepare-docker-template:
  stage: prepare
  extends:
    .run-current-year-template
  image: docker:27.3.1
  services:
    - docker:27.3.1-dind
  before_script:
    - >-
      docker login --username ${CI_REGISTRY_USER}
      --password ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker pull ${DOCKER_CURRENT_IMAGE} || true
    - docker pull ${DOCKER_LATEST_IMAGE} || true
    - docker images
    - apk add bash curl
    - curl --silent "$GITLAB_SECURE_FILES_URL" | bash
    - env
    - pwd
    - ls -la
  script:
    - >-
      docker build --cache-from ${DOCKER_LATEST_IMAGE}
      --tag ${DOCKER_CURRENT_IMAGE} --tag ${DOCKER_LATEST_IMAGE}
      --build-arg="GIT_CRYPT_KEY=.secure_files/git-crypt-key.key"
      --file ${AOC_YEAR}/Dockerfile .
    - docker push ${DOCKER_CURRENT_IMAGE}
    - docker push ${DOCKER_LATEST_IMAGE}

# **************************************************************************** #
#                           Advent of Code 2021-2024                           #
# **************************************************************************** #

include:
  - local: '2021/.gitlab-ci.yml'
  - local: '2022/.gitlab-ci.yml'
  - local: '2023/.gitlab-ci.yml'
  - local: '2024/.gitlab-ci.yml'

# **************************************************************************** #
#                               Pages deployment                               #
# **************************************************************************** #

# Create pages with benchmark results
pages:
  stage: deploy
  tags:
    - linux
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  needs:
    - job: bench ~ aoc-2021
      optional: true
    - job: bench ~ aoc-2022
      optional: true
    - job: bench ~ aoc-2023
      optional: true
    - job: bench ~ aoc-2024
      optional: true
  variables:
    GIT_STRATEGY: clone
    GIT_DEPTH: 1
  script:
    - mkdir -p public
    - if [ -d "benchmarks_2021" ]; then
    -   mv benchmarks_2021 public/2021
    - fi
    - if [ -d "benchmarks_2022" ]; then
    -   mv benchmarks_2022 public/2022
    - fi
    - if [ -d "benchmarks_2023" ]; then
    -   mv benchmarks_2023 public/2023
    - fi
    - if [ -d "benchmarks_2024" ]; then
    -   mv benchmarks_2024 public/2024
    - fi
  artifacts:
    paths:
      - public
